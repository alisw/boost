# Boost Endian Library test Jamfile

# Copyright Beman Dawes 2006, 2013
# Copyright 2018, 2019 Peter Dimov

# Distributed under the Boost Software License, Version 1.0.
# See http://www.boost.org/LICENSE_1_0.txt

# See library home page at http://www.boost.org/libs/endian

import testing ;

project
  : default-build

    <warnings>all

  : requirements

    <toolset>msvc:<warnings-as-errors>on

    <toolset>gcc:<cxxflags>-Wno-long-long
    <toolset>gcc-4.4.7:<cxxflags>-Wno-strict-aliasing
    <toolset>gcc-4.4.7:<cxxflags>-Wno-sign-compare
    <toolset>gcc:<warnings-as-errors>on

    <toolset>clang:<cxxflags>-Wno-long-long
    <toolset>clang:<warnings-as-errors>on
  ;

local rule endian-run ( sources + )
{
    local result ;

    result += [ run $(sources) ] ;
    result += [ run $(sources) : : : <define>BOOST_ENDIAN_NO_INTRINSICS : $(sources[1]:B)_ni ] ;

    return $(result) ;
}

endian-run buffer_test.cpp ;
endian-run endian_test.cpp ;
endian-run endian_operations_test.cpp ;

run endian_in_union_test.cpp ;

endian-run conversion_test.cpp ;

run intrinsic_test.cpp ;

run quick.cpp ;

local allow-warnings =
    "-<toolset>msvc:<warnings-as-errors>on"
    "-<toolset>gcc:<warnings-as-errors>on"
    "-<toolset>clang:<warnings-as-errors>on" ;

compile spirit_conflict_test.cpp
  : $(allow-warnings) ;

endian-run endian_reverse_test.cpp ;

endian-run endian_load_test.cpp ;
endian-run endian_store_test.cpp ;
endian-run endian_ld_st_roundtrip_test.cpp ;

endian-run endian_arithmetic_test.cpp ;

run deprecated_test.cpp ;

compile endian_reverse_cx_test.cpp ;
compile endian_reverse_cx_test.cpp : <define>BOOST_ENDIAN_NO_INTRINSICS : endian_reverse_cx_test_ni ;

endian-run load_convenience_test.cpp ;
endian-run store_convenience_test.cpp ;

endian-run float_typedef_test.cpp ;

endian-run data_test.cpp ;

endian-run endian_hpp_test.cpp ;
